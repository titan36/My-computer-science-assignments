Author: Ashley K. Smith (https://github.com/ashksmith/)
Solution to "C Programming: A modern Approach" chapter 14, exercise 7

Let GENERIC_MAX be the following macro:
#define GENERIC_MAX(type)
type type##_max(type x, type y){
	return x > y ? : y;
}

(a) Show the preprocessor's expansion of GENERIC_MAX(long).
    long long_max(long x, long y){
	return x > y ? : y;
    }

(b) Explain why GENERIC_MAX doesn't work for basic typed such as unsigned long.

    Because the macro argument is also used to name the function we cannot have
    spaced in the function name such as unsigned long unsigned long_max.

(c) Describe a technique that would allow us to use GENERIC_MAX with basic types
    such as unsigned long.

    It's possible to redefine unsigned long, to unsignedlong, ulong or even long
    itself in order to overcome the syntax issues.



