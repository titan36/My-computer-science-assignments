Author: Ashley K. Smith (https://github.com/ashksmith/)
Solution to "C Programming: A modern Approach" chapter 20, exercise 12

The following function supposedly combines two bytes to form an unsigned short
integer. Explain why the function dosn't work and show how to fix it.

	unsigned short create_short(unsigned char high_byte, unsigned char low_byte){
		return high_byte << 8 + low_byte;
	}

Just like before, the problem is operator precedence. This function is returning high_byte
left shifted 8 + low_bytes to the left. The problem is remedied by using parthentheses.

	unsigned short create_short(unsigned char high_byte, unsigned char low_byte){
		return (high_byte << 8) + low_byte;
	}

